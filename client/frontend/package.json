{
  "name": "weld_anomaly_detection_app",
  "version": "0.2.0",
  "private": true,
  "main": "public/electron.js",
  "homepage": "./",
  "author": {
    "name": "Miller Boyd, Gabriel Mongaras, Rebecca Kulhman, Veronica Tanner, Giancarlos Dominguez"
  },
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@material-ui/core": "^4.12.4",
    "@material-ui/icons": "^4.11.3",
    "@mui/icons-material": "^5.14.18",
    "@mui/material": "^5.14.11",
    "@mui/styles": "^5.14.18",
    "@mui/system": "^5.14.15",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.6.8",
    "cors": "^2.8.5",
    "electron-is-dev": "^2.0.0",
    "fs": "^0.0.1-security",
    "material-ui-dropzone": "^3.5.0",
    "mui-image": "^1.0.7",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.17.0",
    "react-scripts": "5.0.1",
    "react-virtualized": "^9.22.5",
    "react-virtualized-auto-sizer": "^1.0.20",
    "react-window": "^1.8.9",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron-dev": "concurrently \"cross-env BROWSER=none npm start\" \"wait-on http://localhost:3000 && electron .\"",
    "electron-pack": "electron-builder -c.extraMetadata.main=build/electron.js",
    "preelectron-pack": "react-scripts build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "concurrently": "^8.2.1",
    "cross-env": "^7.0.3",
    "electron": "^27.0.0",
    "electron-builder": "^24.6.4",
    "wait-on": "^7.0.1"
  },
  "build": {
    "appId": "your.app.id",
    "extraResources": [
      {
        "from": "./flaskComb/",
        "to": "flaskComb/",
        "filter": [
          "**/*"
        ]
      }
    ],
    "directories": {
      "output": "dist",
      "buildResources": "assets"
    },
    "files": [
      "**/*"
    ],
    "win": {
      "icon": "icon.ico"
    },
    "mac": {
      "icon": "icon.icns"
    }
  }
}
